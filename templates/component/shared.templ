package component

import "github.com/jimtrung/go-nexus/internal/domain"

templ Navbar(user *domain.User) {
    <header>
        <div class="flex items-center bg-[#1a2038] text-gray-200 py-3 px-6 justify-between fixed left-0 right-0 top-0 shadow-md z-50">
            <div class="flex items-center">
                <a href="/p" class="flex items-center">
                    <img src="/static/img/logo.png" class="h-10" alt="GoNexus Logo">
                </a>
            </div>

            <div class="flex items-center space-x-5">
                if user != nil {
                    <a href="/p/cart" class="text-gray-200 hover:text-teal-300 transition duration-200">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M2.25 3h1.386c.51 0 .955.343 1.087.835l.383 1.437M7.5 14.25a3 3 0 0 0-3 3h15.75m-12.75-3h11.218c1.121-2.3 2.1-4.684 2.924-7.138a60.114 60.114 0 0 0-16.536-1.84M7.5 14.25 5.106 5.272M6 20.25a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0Zm12.75 0a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0Z" />
                        </svg>
                    </a>
                    <a href="/p/friends" class="text-gray-200 hover:text-teal-300 transition duration-200 flex items-center">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 mr-1">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M15 19.128a9.38 9.38 0 002.625.372 9.337 9.337 0 004.121-.952 4.125 4.125 0 00-7.533-2.493M15 19.128v-.003c0-1.113-.285-2.16-.786-3.07M15 19.128v.106A12.318 12.318 0 018.624 21c-2.331 0-4.512-.645-6.374-1.766l-.001-.109a6.375 6.375 0 0111.964-3.07M12 6.375a3.375 3.375 0 11-6.75 0 3.375 3.375 0 016.75 0zm8.25 2.25a2.625 2.625 0 11-5.25 0 2.625 2.625 0 015.25 0z" />
                        </svg>
                        Friends
                    </a>
                    <a href="/p/profile" class="text-gray-200 hover:text-teal-300 transition duration-200">{ user.Username }</a>
                    <button 
                        hx-post="/auth/logout" 
                        hx-ext="json-enc" 
                        hx-target="body" 
                        hx-push-url="true"
                        class="text-gray-200 hover:text-teal-300 transition duration-200 cursor-pointer"
                    >
                        Log out
                    </button>
                } else {
                    <a href="/p/cart" class="text-gray-200 hover:text-teal-300 transition duration-200">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M2.25 3h1.386c.51 0 .955.343 1.087.835l.383 1.437M7.5 14.25a3 3 0 0 0-3 3h15.75m-12.75-3h11.218c1.121-2.3 2.1-4.684 2.924-7.138a60.114 60.114 0 0 0-16.536-1.84M7.5 14.25 5.106 5.272M6 20.25a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0Zm12.75 0a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0Z" />
                        </svg>
                    </a>
                    <a href="/p/login" class="text-gray-200 hover:text-teal-300 transition duration-200">Log in</a>
                    <a href="/p/signup" class="bg-teal-500 hover:bg-teal-600 text-white px-4 py-1.5 rounded transition duration-200">
                        Sign up
                    </a>
                }
            </div>
        </div>
    </header>
}

templ MessageContainer() {
    <div id="message-container" class="mb-6 hidden">
        <div id="success-message" class="hidden p-4 mb-4 text-sm rounded-lg bg-green-50 text-green-800"></div>
        <div id="error-message" class="hidden p-4 mb-4 text-sm rounded-lg bg-red-50 text-red-800"></div>
    </div>
}

templ FormInput(label, id, name, inputType, placeholder string, required bool) {
    <div>
        <label for={ id } class="block text-sm font-medium text-gray-700 mb-1">{ label }</label>
        <input
            type={ inputType }
            id={ id }
            name={ name }
            placeholder={ placeholder }
            class="w-full px-4 py-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-teal-400 focus:border-teal-400 transition duration-200"
            if required {
                required
            }
        />
    </div>
}

templ SubmitButton(text string) {
    <button
        type="submit"
        class="w-full bg-teal-500 hover:bg-teal-600 text-white py-3 px-4 rounded-md font-semibold transition duration-200"
    >
        { text }
    </button>
}

templ BackToLogin() {
    <div class="mt-8 text-center">
        <p class="text-sm text-gray-600">
            Remember your password?
            <a href="/p/login" class="font-semibold text-teal-500 hover:text-teal-600 transition duration-200">
                Back to login
            </a>
        </p>
    </div>
}

templ PageTitle(title string, subtitle string) {
    <div class="text-center mb-10">
        <h1 class="text-3xl font-bold text-[#1a2038] mb-2">{ title }</h1>
        <p class="text-gray-600">{ subtitle }</p>
    </div>
}

templ UserCard(username string, avatar string, status string, createdAt string, showStatus bool) {
    <div class="flex items-center">
        <img src={ avatar } alt={ username } class="w-10 h-10 rounded-full">
        <div class="ml-3">
            <p class="font-medium text-[#1a2038]">{ username }</p>
            if showStatus {
                <div class="flex items-center">
                    if status == "online" {
                        <span class="status-indicator status-online"></span>
                        <span class="text-sm text-gray-500">Online</span>
                    } else {
                        <span class="status-indicator status-offline"></span>
                        <span class="text-sm text-gray-500">Offline</span>
                    }
                </div>
            } else {
                <p class="text-sm text-gray-500">Sent { createdAt }</p>
            }
        </div>
    </div>
}

templ CardContainer(title string) {
    <div class="bg-white rounded-xl shadow-md p-8">
        <h2 class="text-xl font-semibold mb-4 text-[#1a2038]">{ title }</h2>
        <div class="space-y-4">
            { children... }
        </div>
    </div>
}
