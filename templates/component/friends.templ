package component

import (
    "fmt"
    "github.com/jimtrung/go-nexus/templates/layout"
    "github.com/jimtrung/go-nexus/internal/domain"
)

type Friend struct {
    FriendID   uint
    SenderID   uint
    ReceiverID uint
    Status     string
    CreatedAt  string
    UpdatedAt  string
    Username   string
    Avatar     string
}

type FriendsProps struct {
    User            *domain.User
    Friends         []Friend
    PendingRequests []Friend
    IncomingRequests []Friend
}

templ FriendListItem(friend Friend) {
    <div class="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
        @UserCard(friend.Username, friend.Avatar, friend.Status, "", true)
        <button
            hx-delete={ fmt.Sprintf("/friends/remove/%d", friend.FriendID) }
            hx-target="closest div"
            hx-swap="outerHTML"
            class="text-red-500 hover:text-red-700 transition duration-200"
        >
            Remove
        </button>
    </div>
}

templ IncomingRequestItem(request Friend) {
    <div class="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
        @UserCard(request.Username, request.Avatar, "", request.CreatedAt, false)
        <div class="space-x-2">
            <button
                hx-post={ fmt.Sprintf("/friends/accept/%d", request.FriendID) }
                hx-target="closest div"
                hx-swap="outerHTML"
                class="text-teal-500 hover:text-teal-700 transition duration-200"
            >
                Accept
            </button>
            <button
                hx-delete={ fmt.Sprintf("/friends/reject/%d", request.FriendID) }
                hx-target="closest div"
                hx-swap="outerHTML"
                class="text-red-500 hover:text-red-700 transition duration-200"
            >
                Reject
            </button>
        </div>
    </div>
}

templ SentRequestItem(request Friend) {
    <div class="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
        @UserCard(request.Username, request.Avatar, "", request.CreatedAt, false)
        <button
            hx-delete={ fmt.Sprintf("/friends/cancel/%d", request.FriendID) }
            hx-target="closest div"
            hx-swap="outerHTML"
            class="text-red-500 hover:text-red-700 transition duration-200"
        >
            Cancel
        </button>
    </div>
}

templ Friends(props FriendsProps) {
    @layout.Base("Friends") {
        @Navbar(props.User)

        <div class="min-h-screen pt-28 pb-20 flex flex-col items-center bg-gray-50">
            <div class="w-full max-w-6xl px-6">
                @PageTitle("Friends", "Manage your connections")

                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                    @CardContainer("Friends") {
                        if len(props.Friends) == 0 {
                            <p class="text-gray-500">No friends yet</p>
                        } else {
                            for _, friend := range props.Friends {
                                @FriendListItem(friend)
                            }
                        }
                    }

                    @CardContainer("Incoming Requests") {
                        if len(props.IncomingRequests) == 0 {
                            <p class="text-gray-500">No incoming requests</p>
                        } else {
                            for _, request := range props.IncomingRequests {
                                @IncomingRequestItem(request)
                            }
                        }
                    }

                    @CardContainer("Sent Requests") {
                        if len(props.PendingRequests) == 0 {
                            <p class="text-gray-500">No sent requests</p>
                        } else {
                            for _, request := range props.PendingRequests {
                                @SentRequestItem(request)
                            }
                        }
                    }
                </div>
            </div>
        </div>
    }
} 