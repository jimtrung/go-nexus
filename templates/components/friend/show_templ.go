// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.833
package friend

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "github.com/jimtrung/go-nexus/internal/domain/models"
import "strconv"
import "github.com/jimtrung/go-nexus/templates/layout"

func Show(friends []models.FriendData, requests []models.FriendData) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"flex flex-col items-center min-h-screen bg-gray-100 text-gray-900 p-6\"><h1 class=\"text-3xl font-bold mb-6\">Friends</h1><div class=\"w-full max-w-md bg-white shadow-lg rounded-lg p-6\"><h2 class=\"text-xl font-semibold mb-4\">Friends List</h2><ul class=\"space-y-2\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			for _, friend := range friends {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<li class=\"flex justify-between items-center border-b py-2\"><span>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var3 string
				templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(friend.Username)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/components/friend/show.templ`, Line: 17, Col: 29}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "</span><form hx-delete=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var4 string
				templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs("/friends/remove/" + strconv.Itoa(int(friend.UserID)))
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/components/friend/show.templ`, Line: 18, Col: 77}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "\" hx-trigger=\"submit\" hx-target=\"#response\" hx-swap=\"innerHTML\" class=\"inline\"><button type=\"submit\" class=\"text-red-500 hover:underline\">Remove</button></form></li>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "</ul></div><div class=\"w-full max-w-md bg-white shadow-lg rounded-lg p-6 mt-6\"><h2 class=\"text-xl font-semibold mb-4\">Friend Requests</h2><ul class=\"space-y-2\">")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			for _, request := range requests {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "<li class=\"flex justify-between items-center border-b py-2\"><span>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var5 string
				templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(request.Username)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/components/friend/show.templ`, Line: 35, Col: 30}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "</span><div class=\"flex space-x-2\"><form onsubmit=\"sendJson(event, &#39;/friends/accept&#39;)\" class=\"inline\"><input type=\"hidden\" name=\"receiver_id\" value=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var6 string
				templ_7745c5c3_Var6, templ_7745c5c3_Err = templ.JoinStringErrs(strconv.Itoa(int(request.UserID)))
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/components/friend/show.templ`, Line: 38, Col: 89}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var6))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "\" class=\"receiver-id\"> <button type=\"submit\" class=\"text-green-500 hover:underline\">Accept</button></form><form onsubmit=\"sendJson(event, &#39;/friends/reject&#39;)\" class=\"inline\"><input type=\"hidden\" name=\"receiver_id\" value=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var7 string
				templ_7745c5c3_Var7, templ_7745c5c3_Err = templ.JoinStringErrs(strconv.Itoa(int(request.UserID)))
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `templates/components/friend/show.templ`, Line: 42, Col: 89}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var7))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 9, "\" class=\"receiver-id\"> <button type=\"submit\" class=\"text-red-500 hover:underline\">Reject</button></form></div></li>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 10, "</ul></div><div class=\"w-full max-w-md bg-white shadow-lg rounded-lg p-6 mt-6\"><h2 class=\"text-xl font-semibold mb-4\">Send Friend Request</h2><form onsubmit=\"sendJson(event, &#39;/friends/request&#39;)\" class=\"flex flex-col space-y-4\"><label for=\"receiver-id\" class=\"font-medium\">User ID</label> <input id=\"receiver-id\" name=\"receiver_id\" type=\"text\" required class=\"border border-gray-300 bg-gray-100 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"> <button type=\"submit\" class=\"bg-blue-600 text-white font-semibold py-2 rounded-md hover:bg-blue-700 transition duration-200 w-full\">Send Request</button></form><div id=\"request-response\"></div></div><div id=\"response\"></div><!-- Back Button --><button onclick=\"history.back()\" class=\"mt-6 px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700 transition\">Back</button></div><script>\n            function sendJson(event, url) {\n                event.preventDefault();\n                let form = event.target;\n                let input = form.querySelector(\".receiver-id, #receiver-id\");\n                let value = parseInt(input.value, 10);\n\n                if (isNaN(value)) {\n                    alert(\"Invalid receiver ID\");\n                    return;\n                }\n\n                fetch(url, {\n                    method: \"POST\",\n                    headers: { \"Content-Type\": \"application/json\" },\n                    body: JSON.stringify({ receiver_id: value })\n                })\n                .then(response => response.text())\n                .then(data => {\n                    document.querySelector(\"#response\").innerHTML = `<p class=\"text-green-500\">${data}</p>`;\n                })\n                .catch(error => console.error(\"Error:\", error));\n            }\n\n            document.body.addEventListener(\"htmx:afterRequest\", function (event) {\n                let responseDiv = document.querySelector(\"#response\");\n\n                if (!event.detail.successful) {\n                    responseDiv.innerHTML = `<p class=\"text-red-500\">${event.detail.xhr.responseText}</p>`;\n                } else {\n                    if (event.detail.elt.closest(\"li\")) {\n                        event.detail.elt.closest(\"li\").remove();\n                    }\n                }\n            });\n        </script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = layout.Base("Friends").Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
